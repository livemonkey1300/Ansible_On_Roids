---
# tasks file for op.Neutron
- name: Setting Neutron Fac
  set_fact:
    servicedb : neutron
    servicemain : neutron
    Userdb : neutron
    Passdb : "{{ NEUTRON_DBPASS }}"
    servicedom : default
    servicepass : "{{ NEUTRON_DBPASS }}"
    servicerole : admin
    serviceproject : service
    servicetype : network
    servicedescription : OpenStack Networking
    serviceregion : "{{REGION}}"
    serviceurl : http://{{groups['contoller'][0]}}:9696

- name: database {{ servicedb }}
  command: 'mysql -p{{ mysql_root_password }} -ne "{{ item }}"'
  with_items:
    - DROP DATABASE IF EXISTS {{ servicedb }}
    - DELETE FROM mysql.db WHERE Db='{{ servicedb }}' OR Db='{{ servicedb }}\\_%'
    - DELETE FROM mysql.user WHERE User='{{ Userdb }}'
    - FLUSH PRIVILEGES
    - CREATE DATABASE {{ servicedb }}
    - GRANT ALL PRIVILEGES ON {{ servicedb }}.* TO '{{ Userdb }}'@'localhost' IDENTIFIED BY '{{Passdb}}'
    - GRANT ALL PRIVILEGES ON {{ servicedb }}.* TO '{{ Userdb }}'@'%' IDENTIFIED BY '{{Passdb}}'
    - FLUSH PRIVILEGES
  changed_when: False

- name : Create the {{ Userdb }} user
  os_user:
     name: "{{ Userdb }}"
     password: "{{servicepass}}"
     domain: "{{ servicedom }}"

- name : Add the {{ servicerole }} role to the {{ serviceproject }} project for user {{ Userdb }}
  os_user_role:
    user: "{{ Userdb }}"
    role: "{{ servicerole }}"
    project: "{{ serviceproject }}"

- name : Create a service for {{ Userdb }}
  os_keystone_service:
     name: "{{ Userdb }}"
     service_type: "{{servicetype}}"
     description: "{{servicedescription}}"

- name : Create a endpoints for {{ Userdb }}
  os_keystone_endpoint:
     service: "{{ Userdb }}"
     endpoint_interface: "{{ item }}"
     url: "{{ serviceurl }}"
     region: "{{serviceregion}}"
  loop:
    - admin
    - public
    - internal

- name : install {{ Userdb }} packages
  yum :
    name: "{{packages}}"
    state: latest

- name : install {{ Userdb }} packages
  yum :
    name: "{{packages}}"
    state: latest

- name : Copy {{ Userdb }} config file to Master
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
   - { src: 'neutron.j2', dest: '/etc/neutron/neutron.conf' }
   - { src: 'ml2_conf.j2', dest: '/etc/neutron/plugins/ml2/ml2_conf.ini' }
   - { src: 'linuxbridge_agent.j2', dest: '/etc/neutron/plugins/ml2/linuxbridge_agent.ini' }
   - { src: 'dhcp_agent.j2', dest: '/etc/neutron/dhcp_agent.ini' }
   - { src: 'metadata_agent.j2', dest: '/etc/neutron/metadata_agent.ini' }

- name : Create a link to the /etc/neutron/plugin.ini file
  file:
    src: /etc/neutron/plugins/ml2/ml2_conf.ini
    dest: /etc/neutron/plugin.ini
    state: link
    force: true
  ignore_errors: yes
  register: plug

- name : Populate the {{servicemain}} service database {{servicemain}}
  command: su -s /bin/sh -c "{{servicemain}}-db-manage {{item}}" {{servicemain}}
  loop:
    - --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head

- name : Restart {{servicemain}} services
  systemd:
    state: restarted
    name: "{{ item }}"
    enabled: yes
    masked: no
  loop : "{{ services }}"
